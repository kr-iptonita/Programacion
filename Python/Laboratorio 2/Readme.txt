# -*- coding: utf-8 -*-
"""Readme

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rnfe-yY8fcFyU_Fktgsfr3PP59f4SFkV

El programa " minimizacion.py" se organiza de la siguiente manera :

variables de la funcion objetivo \\
variables de restriccion \\
 resultados de la restriccion

Se usaron las bibliotecas sympy .

El programa " minimizacion.py" se elaboro en google colab \\
Comentarios personales :

el programa "Metodo grafico.py" se organiza de la siguiente manera:

1)Definición de funciones \\
2)Generador de rango de valores para variable independiente \\
3)Definición de graficas con puntos calculados automaticamente \\
4)Llenado de area de fractibilidad \\
5)Impresión de grafica \\
 \\
Se usó pyplot de la biblioteca matplotlib \\
 \\
El programa "Metodo grafico.py" se elaboró en visual studio code \\
 \\
Comentarios personales: \\
 \\
JTCA: La generación de el area de fractibilidad se complicó dado que no podiamos hacer una region de fractibilidad que recorra hasta el infinito siguiendo un patrón \\
 \\
El programa "Distancias.py" se organiza de la siguiente manera : \\
 \\
1) Array compuesto con datos de distancias \\ 
2) Array de precios \\
3) Relacionador de datos \\
4) Algoritmo para hallar la cantidad y las componentes conexas \\
5) definición de calificación-cantidad-componentes \\
6) Definición de problema y generación de sus variables \\
7) función objetivo \\
 \\
Se usaron las bibliotecas re, pulp, numpy y re \\ 
 \\
El programa " Distancias.py" se elaboro en visual studio code. \\
 \\
Comentarios personales : \\
VGPR : El programa fue una union sobre los conceptos implementados en el entarior pero la dificultad recayo en la manipulación de un array
compuesto por son arrays
"""