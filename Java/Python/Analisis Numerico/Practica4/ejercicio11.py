# -*- coding: utf-8 -*-
"""Ejercicio11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dbc2X3ZMpN90pfpmd-XE5-bxX3eDpNef

# **Ejercicio 11**

###Trabajo realizado por los alumnos:
#####    Juárez Torres Carlos Alberto ------------ 318013712
#####    Kano Chavira Nicolás -------------------- 315319204
#####    Méndez Saucedo Abigail ------------------ 421098260
#####    Partida Contreras Marían de los Ángeles - 421095630
"""

import math

def raiz_secante(fun,x0,x1):
  """
      Este programa regresa la raíz de una función a partir de dos puntos
       iniciales distintos
    
    Parameters
    ----------
    x1: float/int punto inicial
    x0: float/int punto inicial
    fun: function función a trabajar

    Returns
    -------
    x1: float raiz de la función
  """
  if x1==x0:
    return print("Por favor ingrese puntos iniciales distintos")
  k=0
  tol=0.001
  while (abs(x1-x0)>tol):
    aux1=x0
    aux2=x1
    x1= aux2-((fun(aux2)*(aux2-aux1))/(fun(aux2)-fun(aux1)))
    x0=aux2
    k+=1
    if k>100:
      print("Favor de elegir nuevos puntos iniciales")
      break
  return x1

def a(x):
  """
    Regresa el valor de la función a
    Parameters
    ----------
    x: float/int punto a evaluar

    Returns
    -------
    y: float evaluación de la función
  """
  if  (x<1) or (x>2):
    return print("Ingrese valores dentro del rango 1, 2: ")
  y = math.exp(x)+(2**(-x))+(2*math.cos(x))-6
  return y

def b1(x):
  """
    Regresa el valor de la función b en el primer intervalo
    Parameters
    ----------
    x: float/int punto a evaluar

    Returns
    -------
    y: float evaluación de la función
  """
  if (x<2) or (x>3):
    return print("Ingrese valores dentro del rango 2, 3: ")
  y = (2*x*math.cos(2*x))-((x-2)**2)
  return y

def b2(x):
  """
    Regresa el valor de la función b en el segundo intervalo
    Parameters
    ----------
    x: float/int punto a evaluar

    Returns
    -------
    y: float evaluación de la función
  """
  if (x<3) or (x>4):
    return print("Ingrese valores dentro del rango 3, 4: ")
  y = (2*x*math.cos(2*x))-((x-2)**2)
  return y

def c1(x):
  """
    Regresa el valor de la función c en el primer intervalo
    Parameters
    ----------
    x: float/int punto a evaluar

    Returns
    -------
    y: float evaluación de la función
  """
  if (x<0) or (x>1):
    return print("Ingrese valores dentro del rango 0, 1: ")
  y = (2*x*math.cos(2*x))-((x-2)**2)
  y = math.exp(x)-(3*x**2)
  return y

def c2(x):
  """
    Regresa el valor de la función c en el segundo intervalo
    Parameters
    ----------
    x: float/int punto a evaluar

    Returns
    -------
    y: float evaluación de la función
  """
  if (x<3) or (x>5):
    return print("Ingrese valores dentro del rango 3, 5: ")
  y = (2*x*math.cos(2*x))-((x-2)**2)
  y = math.exp(x)-(3*x**2)
  return y

print('Raiz a): ',raiz_secante(a,1.5,1.8))
print('Raiz b) [2,3]: ',raiz_secante(b1,2.5,2.8))
print('Raiz b) [3,4]: ',raiz_secante(b2,3.5,3.8))
print('Raiz c) [0,1]: ',raiz_secante(c1,0.5,0.8))
print('Raiz c) [3,5]: ',raiz_secante(c2,3.5,4))